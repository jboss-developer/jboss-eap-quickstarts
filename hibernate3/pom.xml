<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jboss.as.quickstarts</groupId>
	<artifactId>jboss-as-hibernate3</artifactId>
	<version>7.0.2-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>JBoss AS Quickstarts: Hiberanate3</name>
	<description>JBoss AS Quickstarts: Hiberanate3</description>

	<url>http://jboss.org/jbossas</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- declare 3.x version of hibernate. 
			NOTE: this is a grey area, changing those versions can cause failure. 
			NOTE2: hibernate-annotations are not included here, since hibernata-core 3.6.X contains former artifact. -->
		<!-- Define hibernate-core version -->	
		<hibernate.core.version>3.6.8.Final</hibernate.core.version>
		<!-- Define hibernate-entitymanager version -->
		<hibernate.entitymanager.version>3.6.8.Final</hibernate.entitymanager.version>
		<!-- Define hibernate-validator version -->
		<hibernate.validator.version>3.1.0.GA</hibernate.validator.version>
		<!-- Define hibernate-commons-annotations version -->
		<hibernate.commons.annotations.version>3.2.0.Final</hibernate.commons.annotations.version>
	</properties>

	<!-- NOTE: -->
	<dependencyManagement>
		<dependencies>
			<!--  Define hiberante artifacts versions  -->
			<!-- Define dependency version of hibernate-core 
			    NOTE! that scope is	not "provided", this will make maven.war.plugin to include it in WEB-INF/lib -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.core.version}</version>
				
				<!-- Define exclusion of artifacts. Those artifacts have scope set to 'compile', to avoid
					inclusion in WEB-INF/lib, we have to exclude them -->
				<!-- Those artifacts are include as modules in jboss-deployment-structure.xml -->
				<exclusions>
					<!-- Exclude antlr artifact -->
					<exclusion>
						<groupId>antlr</groupId>
						<artifactId>antlr</artifactId>
					</exclusion>
					<!-- Exclude commons-collections artifact -->
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections</artifactId>
					</exclusion>
					<!-- Exclude slf4j-api artifact -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<!-- Exclude dom4j artifact -->
					<exclusion>
						<groupId>dom4j</groupId>
						<artifactId>dom4j</artifactId>
					</exclusion>
					<!-- Exclude jta artifact -->
					<exclusion>
						<groupId>javax.transaction</groupId>
						<artifactId>jta</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Define dependency version of hibernate-entitymanager: NOTE! that scope is 
				not "provided", this will make maven.war.plugin to include it in WEB-INF/lib -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.entitymanager.version}</version>
				<!-- Define exclusion of artifacts. Those artifacts have scope set to 'compile', to avoid
					inclusion in WEB-INF/lib, we have to exclude them -->
				<!-- Those artifacts are include as modules in jboss-deployment-structure.xml -->
				<exclusions>
					<!-- Exclude asm artifact -->
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<!-- Exclude javassist artifact -->
					<exclusion>
						<groupId>javassist</groupId>
						<artifactId>javassist</artifactId>
					</exclusion>
					<!-- Exclude slf4j-api artifact -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<!-- Exclude cglib artifact -->
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib</artifactId>
					</exclusion>

				</exclusions>
			</dependency>

			<!-- Define dependency version of hibernate-validator: NOTE! that scope is not 
				"provided", this will make maven.war.plugin to include it in WEB-INF/lib -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
				<!-- Define exclusion of artifacts. Those artifacts have scope set to 'compile', to avoid
					inclusion in WEB-INF/lib, we have to exclude them -->
				<!-- Those artifacts are include as modules in jboss-deployment-structure.xml -->
				<exclusions>
					<!-- Exclude slf4j-api artifact -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Define dependency version of hibernate-commons-annotations: NOTE! that scope 
				is not "provided", this will make maven.war.plugin to include it in WEB-INF/lib -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-commons-annotations</artifactId>
				<version>${hibernate.commons.annotations.version}</version>
				<!-- Define exclusion of artifacts. Those artifacts have scope set to 'compile', to avoid
					inclusion in WEB-INF/lib, we have to exclude them -->
				<!-- Those artifacts are include as modules in jboss-deployment-structure.xml -->
				<exclusions>
					<!-- Exclude slf4j-api artifact -->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>



			<!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any 
				dependencies from org.jboss.spec will have their version defined by this 
				BOM -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
				the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
				any version of JBoss AS that implements Java EE 6, not just JBoss AS 7! -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>3.0.0.Beta1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>



		<!-- Define dependency on hibernate 3.x, since scope is 'compile', it will 
			be included in WEB-INF/lib -->
		<!-- Import the hibernate-core, so its included in deployment unit -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
	
		<!-- Import the hibernate-entitymanager, so its included in deployment unit -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>

		<!-- Import the hibernate-validator, so its included in deployment unit -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- Import the hibernate-commons-annotations, so its included in deployment unit -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
		</dependency>

	</dependencies>

	<build>
		<!-- Set the name of the war, used as the context root when the app is 
			deployed -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- JBoss AS plugin to deploy war -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.1.0.Beta1b</version>
			</plugin>
			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>

