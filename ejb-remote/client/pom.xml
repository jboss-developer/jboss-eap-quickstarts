<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>org.jboss.as.quickstarts</groupId>
   <artifactId>jboss-as-quickstarts-ejb-remote-client</artifactId>
   <version>7.0.2-SNAPSHOT</version>
   <packaging>jar</packaging>
   <name>JBoss AS Quickstarts: EJB Remote Client</name>
   <description>JBoss AS Quickstarts: EJB Remoting</description>

   <url>http://jboss.org/jbossas</url>
   <licenses>
      <license>
         <name>Apache License, Version 2.0</name>
         <distribution>repo</distribution>
         <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      </license>
   </licenses>

    <repositories>
      <!-- Add the JBoss repository for org.jboss</groupId:jboss-ejb-client 
           this will not be necessary if it has been uploaded to central -->
      <repository>
          <id>jboss-public-repository-group</id>
          <name>JBoss Public Repository Group</name>
          <url>http://repository.jboss.org/nexus/content/groups/public/</url>
          <layout>default</layout>
          <releases>
          <enabled>true</enabled>
          <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
          <enabled>true</enabled>
          <updatePolicy>never</updatePolicy>
          </snapshots>
      </repository>
    </repositories>

   <properties>
      <!-- Explicitly declaring the source encoding eliminates the following
         message: -->
      <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
         resources, i.e. build is platform dependent! -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>

   <dependencyManagement>
      <dependencies>
         <!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
         <!-- JBoss distributes a complete set of Java EE 6 APIs including
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
            a collection) of artifacts. We use this here so that we always get the correct
            versions of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can
            read this as the JBoss stack of the Java EE 6 Web Profile APIs), and we use
            version 2.0.0.Beta1 which is the latest release of the stack. You can actually
            use this stack with any version of JBoss AS that implements Java EE 6, not
            just JBoss AS 7! -->
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-web-6.0</artifactId>
            <version>2.0.0.Final</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>

       <!-- Import the transaction spec API, we use runtime scope because we aren't using any direct
        reference to the spec API in our client code -->
      <dependency>
         <groupId>org.jboss.spec.javax.transaction</groupId>
         <artifactId>jboss-transaction-api_1.1_spec</artifactId>
         <scope>runtime</scope>
      </dependency>

      <!-- Import the EJB 3.1 API, we use runtime scope because we aren't using any direct
       reference to EJB spec API in our client code -->
      <dependency>
         <groupId>org.jboss.spec.javax.ejb</groupId>
         <artifactId>jboss-ejb-api_3.1_spec</artifactId>
         <scope>runtime</scope>
      </dependency>

       <!-- We depend on the server side EJBs of this application -->
       <dependency>
          <groupId>org.jboss.as.quickstarts</groupId>
          <artifactId>jboss-as-ejb-remote-server-side</artifactId>
          <version>${project.version}</version>
       </dependency>

       <!-- JBoss EJB client API jar. We use runtime scope because the EJB client API
        isn't directly used in this example. We just need it in our runtime classpath -->
       <dependency>
           <groupId>org.jboss</groupId>
           <artifactId>jboss-ejb-client</artifactId>
           <version>1.0.0.Beta9</version>
           <scope>runtime</scope>
       </dependency>

       <!-- client communications with the server use XNIO -->
       <dependency>
           <groupId>org.jboss.xnio</groupId>
           <artifactId>xnio-api</artifactId>
           <version>3.0.0.CR5</version>
           <scope>runtime</scope>
       </dependency>

       <dependency>
           <groupId>org.jboss.xnio</groupId>
           <artifactId>xnio-nio</artifactId>
           <version>3.0.0.CR5</version>
           <scope>runtime</scope>
       </dependency>

      <!-- The client needs JBoss remoting to access the server -->
       <dependency>
            <groupId>org.jboss.remoting3</groupId>
            <artifactId>jboss-remoting</artifactId>
            <version>3.2.0.CR6</version>
            <scope>runtime</scope>
        </dependency>

      <!-- Remote EJB accesses can be secured -->
       <dependency>
           <groupId>org.jboss.sasl</groupId>
           <artifactId>jboss-sasl</artifactId>
           <version>1.0.0.Beta9</version>
       </dependency>

       <!-- data serialization for invoking remote EJBs -->
       <dependency>
           <groupId>org.jboss.marshalling</groupId>
           <artifactId>jboss-marshalling-river</artifactId>
           <version>1.3.0.GA</version>
           <scope>runtime</scope>
       </dependency>

   </dependencies>

   <build>
      <plugins>
         <!-- Enforce Java 1.6  -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.1</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>

         <!-- Add the maven exec plugin to allow us to run a java program via maven -->
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                  <goals>
                     <goal>exec</goal>
                  </goals>
              </execution>
            </executions>
            <configuration>
              <executable>java</executable>
              <workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory>
              <arguments>
                <!-- automatically creates the classpath using all project dependencies,
                     also adding the project build directory -->
                <argument>-classpath</argument>
                <classpath>
                </classpath>
                <argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument>
              </arguments>
            </configuration>
        </plugin>
            <!-- The JBoss AS plugin deploys your apps to a local JBoss AS 
               container -->
            <!-- Disabling it here means that we don't try to deploy this POM! -->
            <plugin>
               <groupId>org.jboss.as.plugins</groupId>
               <artifactId>jboss-as-maven-plugin</artifactId>
               <version>7.1.0.CR1</version>
               <inherited>true</inherited>
               <configuration>
                  <skip>true</skip>
               </configuration>
            </plugin>
      </plugins>

   </build>

</project>
