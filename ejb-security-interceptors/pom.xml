<?xml version="1.0"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.quickstarts.eap</groupId>
    <artifactId>jboss-ejb-security-interceptors</artifactId>
    <version>6.4.0.GA</version>
    <packaging>ejb</packaging>
    <name>JBoss EAP Quickstart: ejb-security-interceptors</name>
    <description>JBoss EAP Quickstart: EJB Security Interceptors</description>

    <url>http://jboss.org/jbossas</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->

        <version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>

        <version.jboss.as>7.5.0.Final-redhat-21</version.jboss.as>

        <version.jboss.spec.javaee.6.0>3.0.2.Final-redhat-15</version.jboss.spec.javaee.6.0>

        <!-- To run this quickstart in Eclipse, we must turn on JDT APT to activate annotation processing-->
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>

        <!-- other plugin versions -->
        <version.exec.plugin>1.2.1</version.exec.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>
    </properties>

    <dependencyManagement>
        <dependencies>
                <!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
                <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
                    of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
                    of artifacts. We use this here so that we always get the correct versions
                    of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as
                    the JBoss stack of the Java EE 6 APIs). You can actually use this stack with
                    any version of JBoss EAP that implements Java EE 6. -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-6.0</artifactId>
                <version>${version.jboss.spec.javaee.6.0}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-ejb-client-bom</artifactId>
                <version>${version.jboss.as}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-security-api</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-build-config</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-security</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-core-security-api</artifactId>
            <exclusions>
                    <exclusion>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-build-config</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

          <!-- Import the CDI API, we use provided scope as the API is included in
              JBoss EAP 6 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
        </dependency>

          <!-- Import the Common Annotations API (JSR-250), we use provided scope
              as the API is included in JBoss EAP 6 -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
        </dependency>

          <!-- Import the Servlet API, we use provided scope as the API is included
              in JBoss EAP 6 -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
        </dependency>

          <!-- JBoss EJB client API jar. We use runtime scope because the EJB client
              API isn't directly used in this example. We just need it in our runtime classpath -->
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-ejb-client</artifactId>
        </dependency>

          <!--  Contains SASL mechanisms to authenticate to server. -->
        <dependency>
            <groupId>org.jboss.sasl</groupId>
            <artifactId>jboss-sasl</artifactId>
            <scope>runtime</scope>
        </dependency>

          <!-- client communications with the server use XNIO -->
        <dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-api</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-nio</artifactId>
            <scope>runtime</scope>
        </dependency>

          <!-- data serialization for invoking remote EJBs -->
        <dependency>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-river</artifactId>
            <scope>runtime</scope>
        </dependency>

          <!-- Import the transaction spec API, we use runtime scope because we aren't
              using any direct reference to the spec API in our client code -->
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.1_spec</artifactId>
            <scope>runtime</scope>
        </dependency>

    </dependencies>

    <build>
          <!-- Set the name of the jar, used as the context root when the app is
              deployed -->
        <finalName>${project.artifactId}</finalName>
        <plugins>

    <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>2.3</version>
          <configuration>
            <!-- http://maven.apache.org/plugins/maven-ejb-plugin/ -->
            <ejbVersion>3.1</ejbVersion>
            <generateClient>true</generateClient>
          </configuration>
        </plugin>
                <!-- Add the maven exec plugin to allow us to run a java program via maven -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${version.exec.plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory>
                    <arguments>
                                  <!-- automatically creates the classpath using all project dependencies,
                                      also adding the project build directory -->
                        <argument>-classpath</argument>
                        <classpath>
                        </classpath>
                        <argument>org.jboss.as.quickstarts.ejb_security_interceptors.RemoteClient</argument>
                    </arguments>
                </configuration>
            </plugin>

                <!-- JBoss AS plugin to deploy ejb -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.maven.plugin}</version>
                <configuration>
                   <filename>${project.build.finalName}.jar</filename>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
